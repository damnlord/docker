# PHP Version environment variable
ARG PHP_VERSION

FROM php:$PHP_VERSION-fpm

# Remote working directory environment variable
ARG REMOTE_WORKING_DIR

RUN apt-get update -y
RUN apt-get -y install gcc make autoconf libc-dev pkg-config libzip-dev

RUN apt-get install -y --no-install-recommends \
	bash \
	git \
	nodejs npm \
	libz-dev \
	libpq-dev \
	libxml2-dev \
	libmemcached-dev \
	libldap2-dev libbz2-dev \
	zlib1g-dev libicu-dev g++ \
	libssl-dev libssl-doc libsasl2-dev \
	curl libcurl4-openssl-dev

RUN apt-get install -y --no-install-recommends \
	libgmp-dev firebird-dev libib-util

RUN apt-get install -y --no-install-recommends \
	re2c libpng++-dev libwebp-dev libjpeg-dev libjpeg62-turbo-dev libpng-dev libxpm-dev libvpx-dev libfreetype6-dev

RUN apt-get install -y --no-install-recommends \
	python3-lib2to3 libmagick++-dev libmagickwand-dev

RUN apt-get install -y --no-install-recommends \
	zlib1g-dev libgd-dev \
	unzip libpcre3 libpcre3-dev \
	sqlite3 libsqlite3-dev libxslt-dev \
	libtidy-dev libxslt1-dev libmagic-dev libexif-dev file \
	libmhash2 libmhash-dev libc-client-dev libkrb5-dev libssh2-1-dev \
	poppler-utils ghostscript libmagickwand-6.q16-dev libsnmp-dev libedit-dev libreadline6-dev libsodium-dev \
	freetds-bin freetds-dev freetds-common libct4 libsybdb5 tdsodbc libreadline-dev librecode-dev libpspell-dev libonig-dev

# issue on linux/amd64
#RUN docker-php-ext-configure imap --with-kerberos --with-imap-ssl && docker-php-ext-install imap

# fix for docker-php-ext-install pdo_dblib
# https://stackoverflow.com/questions/43617752/docker-php-and-freetds-cannot-find-freetds-in-know-installation-directories
RUN ln -s /usr/lib/x86_64-linux-gnu/libsybdb.so /usr/lib/
RUN docker-php-ext-install pdo_dblib

RUN docker-php-ext-install dba
#RUN docker-php-ext-install ldap
RUN docker-php-ext-install bcmath
RUN docker-php-ext-install bz2
RUN docker-php-ext-install calendar
RUN docker-php-ext-install ctype
RUN docker-php-ext-install curl
RUN docker-php-ext-install dom
RUN docker-php-ext-install fileinfo
RUN docker-php-ext-install filter
RUN docker-php-ext-install exif
RUN docker-php-ext-install ftp
RUN docker-php-ext-install gettext
RUN docker-php-ext-install gmp
RUN docker-php-ext-install iconv
RUN docker-php-ext-install intl
RUN docker-php-ext-install mbstring
RUN docker-php-ext-install mysqli
RUN docker-php-ext-install opcache
RUN docker-php-ext-install pcntl
RUN docker-php-ext-install pspell
RUN docker-php-ext-install pdo_mysql
RUN docker-php-ext-install pdo_pgsql
RUN docker-php-ext-install pdo_sqlite
RUN docker-php-ext-install pgsql
RUN docker-php-ext-install phar
RUN docker-php-ext-install posix
RUN docker-php-ext-install session
RUN docker-php-ext-install shmop
RUN docker-php-ext-install simplexml
RUN docker-php-ext-install soap
RUN docker-php-ext-install sockets
RUN docker-php-ext-install sodium
RUN docker-php-ext-install sysvmsg
RUN docker-php-ext-install sysvsem
RUN docker-php-ext-install sysvshm
RUN docker-php-ext-install snmp
RUN docker-php-ext-install tidy
RUN docker-php-ext-install zip
RUN docker-php-ext-install xsl
RUN docker-php-ext-install xml

# install GD
RUN docker-php-ext-configure gd --with-jpeg --with-xpm --with-webp --with-freetype && \
	docker-php-ext-install -j$(nproc) gd

# build fails with spl
# RUN docker-php-ext-configure spl && docker-php-ext-install spl

# install pecl extension
RUN pecl install ds && docker-php-ext-enable ds
RUN pecl install memcached && docker-php-ext-enable memcached
RUN pecl install imagick && docker-php-ext-enable imagick
RUN pecl install igbinary && docker-php-ext-enable igbinary
RUN pecl install mongodb && docker-php-ext-enable mongodb
RUN pecl install apcu && docker-php-ext-enable apcu --ini-name docker-php-ext-10-apcu.ini
RUN yes "" | pecl install msgpack && docker-php-ext-enable msgpack

# install xdebug
RUN pecl install xdebug && docker-php-ext-enable xdebug


RUN apt-get update -y && apt-get install -y apt-transport-https locales gnupg

# install required libs for health check
RUN apt-get -y install libfcgi0ldbl nano htop iotop lsof cron mariadb-client redis-tools wget vim

# install composer
RUN EXPECTED_CHECKSUM="$(wget -q -O - https://composer.github.io/installer.sig)" && \
	php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
	ACTUAL_CHECKSUM="$(php -r "echo hash_file('sha384', 'composer-setup.php');")" && \
	if [ "$EXPECTED_CHECKSUM" != "$ACTUAL_CHECKSUM" ]; then >&2 echo 'ERROR: Invalid installer checksum' && exit 1; fi

RUN php composer-setup.php --quiet && rm composer-setup.php && \
	mv composer.phar /usr/local/sbin/composer && \
	chmod +x /usr/local/sbin/composer

RUN chmod +x  /usr/local/bin/*

RUN apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Remove Cache
RUN rm -rf /var/cache/apk/*

# Add UID '1000' to www-data
RUN usermod -u 1000 www-data && groupmod -g 1000 www-data

RUN mkdir /tmp/grinds; chmod 777 /tmp/grinds
RUN chown -R www-data:www-data $REMOTE_WORKING_DIR
RUN chmod -R g+rwxs $REMOTE_WORKING_DIR
RUN chown -R www-data:www-data $(getent passwd www-data | cut -d: -f6)

# Expose port 9000 and start php-fpm server
EXPOSE 9000

USER www-data
CMD ["php-fpm"]